name: Set up infrastructure CI/CD
on:
  workflow_dispatch:

env:
   WORKFLOW_ID: build_image_web.yaml

jobs:
  set_up_infra:    
    runs-on: [self-hosted,{{cookiecutter.labels}}]
    steps:
    - name: checkout repository
      uses: actions/checkout@v3
    - name: define repo path
      run: echo "GIT_REPO=$(echo ${GITHUB_REPOSITORY} | sed -e 's/infra_{{cookiecutter.env}}/app_{{cookiecutter.env}}/g')" >> $GITHUB_ENV
    - name: trigger build image
      run: |
         curl -X POST \
         -H "Authorization: token {% raw %}${{ secrets.TF_VAR_github_token }}{% endraw %} \
         --url https://api.github.com/repos/${GIT_REPO}/actions/workflows/${WORKFLOW_ID}/dispatches \
         -d '{"ref":"main"}'
    - name: bash sync_cloud.sh
      env: 
        TF_VAR_github_token: {% raw %}${{ secrets.TF_VAR_github_token }}{% endraw %}
      run: bash sync_cloud.sh
    - name: set default project
      run: gcloud config set project "{{cookiecutter.project_id}}"
    - name: configure kubernetes connection
      run: gcloud container clusters get-credentials "{{cookiecutter.cluster_name}}-{{cookiecutter.workspace}}" --region "{{cookiecutter.region}}" --project "{{cookiecutter.project_id}}"
    - name: check pods number
      run: |
         repeat="true"
         wait_s=10
         max_retries=20
         while ${repeat} ; do
         pods_n=`kubectl get pods -n airflow | wc -l`
         if [ ${pods_n} -ge 5 ] ; then
          echo "Pods number - ok" && exit 0
         else
         ((i=i+1)) && echo "retries number ${i}" ; sleep ${wait_s}
          if [ ${i} -eq ${max_retries} ] ; then
                echo "The maximum number of retries has been reached" && exit 1
          fi
         fi
         done      
    - name: check pods
      run: |
         max_retries=20
         for i in pgbouncer airflow-redis airflow-scheduler airflow-webserver airflow-worker ; do
         until kubectl wait --timeout=10s --for=condition=ready pods -n airflow -l app=$i
         do echo "waiting for $i"
            ((a=a+1)) && echo "retries number ${a}" 
            if [ ${a} -eq ${max_retries} ] ; then
                echo "The maximum number of retries has been reached" && exit 1
            fi
         done
         done    
    - name: check webserver ip
      run: |
        echo "WEBSERVER_URL=$(kubectl get service airflow-webserver -n airflow -o jsonpath="{.status.loadBalancer.ingress[0].ip}:{.spec.ports[0].port}")" >> $GITHUB_ENV
    - name: show webserver URL
      run: {% raw %} echo "https://${{ env.WEBSERVER_URL }}" {% endraw %}
    - name: check webserver health
      run: |
         repeat="true"
         wait_s=10
         max_retries=30
         while ${repeat} ; do
         {% raw %} CHECK=`timeout 300 curl -k "https://${{ env.WEBSERVER_URL }}/api/v1/health" -H "content-type: application/json" | grep -w healthy | wc -l` {% endraw %}
         if [ ${CHECK} -eq 2 ] ; then
          echo "cluster is healthy" ; repeat="false"
         else
         ((i=i+1)) && echo "check number ${i} - cluster is not healthy yet" ; sleep ${wait_s}
          if [ ${i} -eq ${max_retries} ] ; then
                echo "The maximum number of retries has been reached" && exit 1
          fi
         fi
         done
